// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Icons$ReactHooksTemplate = require("./Icons.bs.js");
var SharedStyles$ReactHooksTemplate = require("./SharedStyles.bs.js");
var EditableField$ReactHooksTemplate = require("./EditableField.bs.js");

function text(isDone) {
  var baseStyle = Css.style(/* :: */[
        Css.flexGrow(1.0),
        /* :: */[
          Css.margin(Css.zero),
          /* :: */[
            Css.padding2(Css.rem(0.25), Css.rem(0.75)),
            /* [] */0
          ]
        ]
      ]);
  if (isDone) {
    return Css.merge(/* :: */[
                baseStyle,
                /* :: */[
                  Css.style(/* :: */[
                        Css.textDecoration(/* lineThrough */412155569),
                        /* :: */[
                          Css.color(Css.grey),
                          /* [] */0
                        ]
                      ]),
                  /* [] */0
                ]
              ]);
  } else {
    return baseStyle;
  }
}

var delButton = Css.style(/* :: */[
      Css.border(Css.px(0), /* none */-922086728, Css.white),
      /* :: */[
        Css.display(/* flex */-1010954439),
        /* :: */[
          Css.alignItems(Css.center),
          /* :: */[
            Css.cursor(/* pointer */-786317123),
            /* :: */[
              Css.opacity(0.512),
              /* :: */[
                Css.hover(/* :: */[
                      Css.opacity(1.0),
                      /* [] */0
                    ]),
                /* :: */[
                  Css.backgroundColor(Css.white),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var checkBox = Css.style(/* :: */[
      Css.margin(Css.zero),
      /* :: */[
        Css.cursor(/* pointer */-786317123),
        /* [] */0
      ]
    ]);

var Styles = /* module */[
  /* text */text,
  /* delButton */delButton,
  /* checkBox */checkBox
];

function TodoItem(Props) {
  var todo = Props.todo;
  var dispatch = Props.dispatch;
  var match = React.useState((function () {
          return false;
        }));
  var setActive = match[1];
  var match$1 = React.useState((function () {
          return false;
        }));
  var setDragHandle = match$1[1];
  var onSubmitText = function (text) {
    return Curry._1(dispatch, /* Update */Block.__(2, [
                  todo[/* id */0],
                  text
                ]));
  };
  var handleDrag = function (e) {
    e.nativeEvent.dataTransfer.setData("text/html", todo);
    return Curry._1(dispatch, /* Drag */Block.__(4, [todo[/* id */0]]));
  };
  return React.createElement("div", {
              key: String(todo[/* id */0]) + "lol",
              className: SharedStyles$ReactHooksTemplate.itemContainer(match[0]),
              draggable: true,
              onClick: (function (param) {
                  return Curry._1(setActive, (function (param) {
                                return false;
                              }));
                }),
              onDragOver: (function (e) {
                  e.preventDefault();
                  return /* () */0;
                }),
              onDragStart: handleDrag,
              onDrop: (function (param) {
                  return Curry._1(dispatch, /* Drop */Block.__(5, [todo[/* id */0]]));
                }),
              onMouseEnter: (function (param) {
                  return Curry._1(setDragHandle, (function (param) {
                                return true;
                              }));
                }),
              onMouseLeave: (function (param) {
                  return Curry._1(setDragHandle, (function (param) {
                                return false;
                              }));
                })
            }, React.createElement("div", {
                  className: SharedStyles$ReactHooksTemplate.actionContainer
                }, match$1[0] ? Icons$ReactHooksTemplate.getIcon(/* DragHandle */2) : ""), React.createElement("div", {
                  className: SharedStyles$ReactHooksTemplate.actionContainer
                }, React.createElement("input", {
                      className: checkBox,
                      type: "checkbox",
                      value: Pervasives.string_of_bool(todo[/* isDone */2]),
                      onChange: (function (_event) {
                          return Curry._1(dispatch, /* Toggle */Block.__(1, [todo[/* id */0]]));
                        })
                    })), React.createElement(EditableField$ReactHooksTemplate.make, {
                  text: todo[/* text */1],
                  onSubmit: onSubmitText,
                  isDone: todo[/* isDone */2]
                }), React.createElement("div", {
                  className: SharedStyles$ReactHooksTemplate.actionContainer
                }, React.createElement("button", {
                      className: delButton,
                      onClick: (function (param) {
                          return Curry._1(dispatch, /* Delete */Block.__(3, [todo[/* id */0]]));
                        })
                    }, Icons$ReactHooksTemplate.getIcon(/* Remove */1))));
}

var make = TodoItem;

exports.Styles = Styles;
exports.make = make;
/* delButton Not a pure module */
