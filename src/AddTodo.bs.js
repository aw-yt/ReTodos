// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Icons$ReactHooksTemplate = require("./Icons.bs.js");
var SharedStyles$ReactHooksTemplate = require("./SharedStyles.bs.js");
var EditableField$ReactHooksTemplate = require("./EditableField.bs.js");

var newLabel = Css.style(/* :: */[
      Css.position(Css.absolute),
      /* :: */[
        Css.left(Css.px(52)),
        /* :: */[
          Css.color(Css.grey),
          /* [] */0
        ]
      ]
    ]);

var Styles = /* module */[/* newLabel */newLabel];

function AddTodo(Props) {
  var dispatch = Props.dispatch;
  var match = React.useState((function () {
          return true;
        }));
  var setLabelActive = match[1];
  var isLabelActive = match[0];
  var onFieldClick = function (param) {
    return Curry._1(setLabelActive, (function (param) {
                  return false;
                }));
  };
  var onSubmit = function (text) {
    if (text.length !== 0) {
      return Curry._1(dispatch, /* NewTodo */Block.__(0, [text]));
    } else {
      return Curry._1(setLabelActive, (function (param) {
                    return true;
                  }));
    }
  };
  return React.createElement("div", {
              className: SharedStyles$ReactHooksTemplate.itemContainer(isLabelActive)
            }, React.createElement("div", {
                  className: SharedStyles$ReactHooksTemplate.actionContainer
                }, Icons$ReactHooksTemplate.getIcon(/* Add */0)), React.createElement(EditableField$ReactHooksTemplate.make, {
                  onSubmit: onSubmit,
                  isDone: false,
                  onFieldClick: onFieldClick
                }), isLabelActive ? React.createElement("div", {
                    className: newLabel
                  }, "New Item") : null);
}

var make = AddTodo;

exports.Styles = Styles;
exports.make = make;
/* newLabel Not a pure module */
