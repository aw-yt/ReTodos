// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Webapi__Dom__Element = require("bs-webapi/src/Webapi/Webapi__Dom/Webapi__Dom__Element.js");

function text(isDone) {
  var baseStyle = Css.style(/* :: */[
        Css.flexGrow(1.0),
        /* :: */[
          Css.margin(Css.zero),
          /* :: */[
            Css.padding2(Css.rem(0.25), Css.rem(0.75)),
            /* :: */[
              Css.focus(/* :: */[
                    Css.outline(Css.px(0), Css.none, Css.white),
                    /* [] */0
                  ]),
              /* :: */[
                Css.width(/* `percent */[
                      -119887163,
                      100.0
                    ]),
                /* :: */[
                  Css.whiteSpace(/* preWrap */660870029),
                  /* :: */[
                    Css.wordWrap(/* breakWord */1059921449),
                    /* :: */[
                      Css.minHeight(Css.rem(1.5)),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]);
  if (isDone) {
    return Css.merge(/* :: */[
                baseStyle,
                /* :: */[
                  Css.style(/* :: */[
                        Css.textDecoration(/* lineThrough */412155569),
                        /* :: */[
                          Css.color(Css.grey),
                          /* [] */0
                        ]
                      ]),
                  /* [] */0
                ]
              ]);
  } else {
    return baseStyle;
  }
}

var inputContainer = Css.style(/* :: */[
      Css.flex3(1.0, 1.0, /* auto */-1065951377),
      /* [] */0
    ]);

var Styles = /* module */[
  /* text */text,
  /* inputContainer */inputContainer
];

function EditableField(Props) {
  var match = Props.text;
  var text$1 = match !== undefined ? match : "";
  var onSubmit = Props.onSubmit;
  var isDone = Props.isDone;
  var match$1 = Props.onFieldClick;
  var onFieldClick = match$1 !== undefined ? match$1 : (function (param) {
        return /* () */0;
      });
  var divRef = React.useRef(null);
  var onKeyPress = function ($$event) {
    if ($$event.shiftKey) {
      return 0;
    } else {
      var match = $$event.key;
      if (match === "Enter") {
        Curry._1(onSubmit, $$event.currentTarget.innerHTML);
        Belt_Option.map(Belt_Option.flatMap(Caml_option.nullable_to_opt(divRef.current), Webapi__Dom__Element.asHtmlElement), (function (__x) {
                __x.innerHTML = "";
                return /* () */0;
              }));
        $$event.preventDefault();
        return /* () */0;
      } else {
        return /* () */0;
      }
    }
  };
  return React.createElement("div", {
              className: inputContainer
            }, React.createElement("div", {
                  ref: divRef,
                  className: text(isDone),
                  contentEditable: true,
                  onKeyPress: onKeyPress,
                  onBlur: (function (e) {
                      return Curry._1(onSubmit, e.currentTarget.innerHTML);
                    }),
                  onClick: (function (param) {
                      return Curry._1(onFieldClick, /* () */0);
                    }),
                  dangerouslySetInnerHTML: {
                    __html: text$1
                  }
                }));
}

var make = EditableField;

exports.Styles = Styles;
exports.make = make;
/* inputContainer Not a pure module */
