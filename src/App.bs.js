// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var AddTodo$ReactHooksTemplate = require("./AddTodo.bs.js");
var TodoItem$ReactHooksTemplate = require("./TodoItem.bs.js");
var AppStyles$ReactHooksTemplate = require("./AppStyles.bs.js");

var lastId = /* record */[/* contents */0];

function reducer(state, action) {
  switch (action.tag | 0) {
    case 0 : 
        lastId[0] = lastId[0] + 1 | 0;
        return /* record */[/* todos */Belt_Array.concat(state[/* todos */0], /* array */[/* record */[
                        /* id */lastId[0],
                        /* text */action[0],
                        /* isDone */false
                      ]])];
    case 1 : 
        var id = action[0];
        return /* record */[/* todos */Belt_Array.map(state[/* todos */0], (function (todo) {
                        var match = todo[/* id */0] === id;
                        if (match) {
                          return /* record */[
                                  /* id */todo[/* id */0],
                                  /* text */todo[/* text */1],
                                  /* isDone */!todo[/* isDone */2]
                                ];
                        } else {
                          return todo;
                        }
                      }))];
    case 2 : 
        var text = action[1];
        var id$1 = action[0];
        return /* record */[/* todos */Belt_Array.map(state[/* todos */0], (function (todo) {
                        var match = todo[/* id */0] === id$1;
                        if (match) {
                          return /* record */[
                                  /* id */todo[/* id */0],
                                  /* text */text,
                                  /* isDone */todo[/* isDone */2]
                                ];
                        } else {
                          return todo;
                        }
                      }))];
    case 3 : 
        var id$2 = action[0];
        return /* record */[/* todos */Belt_Array.keep(state[/* todos */0], (function (todo) {
                        return todo[/* id */0] !== id$2;
                      }))];
    
  }
}

function App(Props) {
  var match = React.useReducer(reducer, /* record */[/* todos : array */[]]);
  var dispatch = match[1];
  return React.createElement("div", {
              className: AppStyles$ReactHooksTemplate.appContainer
            }, React.createElement("h1", {
                  className: AppStyles$ReactHooksTemplate.heading
                }, "TODO List"), Belt_Array.map(match[0][/* todos */0], (function (todo) {
                    return React.createElement(TodoItem$ReactHooksTemplate.make, {
                                todo: todo,
                                dispatch: dispatch,
                                key: "todo" + String(todo[/* id */0])
                              });
                  })), React.createElement(AddTodo$ReactHooksTemplate.make, {
                  dispatch: dispatch
                }));
}

var make = App;

exports.lastId = lastId;
exports.reducer = reducer;
exports.make = make;
/* react Not a pure module */
